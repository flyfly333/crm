<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.aptech.crm.dao.LogDao">
	  
	<delete id="deleteByIds" parameterType="java.lang.reflect.Array">
		delete from Log where id in
		<foreach collection="array" item="item" open="(" close=")" separator=",">
			#{item}
		</foreach>
	</delete>
	<!-- 添加系统日志方法 -->
	<insert id="add" parameterType="Log" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		INSERT INTO LOG (user_id,user_name,module_name,log_context,log_time,ip,log_type)
			VALUES(#{user.id},#{user.userName},#{moduleName},#{logContext},#{logTime},#{ip},#{logType})
	</insert>

	<sql id="conditionSql">
		<if test="condition != null">
			<where>
				<if test="condition.userName != null and condition.userName != ''">
					user_name like concat('%',#{condition.userName},'%')
				</if>
				<if test="condition.moduleName != null and condition.moduleName != ''">
					and module_name like concat('%',#{condition.moduleName},'%')
				</if>
				<if test="condition.logContext != null and condition.logContext != ''">
				    and log_context like concat('%',#{condition.logContext},'%') 
				</if>
				<if test="condition.ip != null and  condition.ip != ''">
					and ip like concat('%',#{condition.ip},'%')
				</if>
				<if test="condition.SlogTime != null and condition.SlogTime != ''">
					and log_time &gt; #{condition.SlogTime}
				</if>
				<if test="condition.ElogTime != null and condition.ElogTime != ''">
					and log_time &lt; #{condition.ElogTime}
				</if>
				<if test="condition.logType != -1">
					and log_type = #{condition.logType}
				</if>
			</where>
		</if>
	</sql>
	
	<resultMap type="Log" id="logMap" autoMapping="true">
		<id column="id" property="id"/>
		<association property="user" column="user_id" javaType="User" select="org.aptech.crm.dao.UserDao.getById2"></association>
	</resultMap> 
	<select id="getListByCondition" resultMap="logMap">
		select * from Log
		    <include refid="conditionSql"></include>
		order by ${column} ${orderBy}
		limit #{start},#{limit}
	</select>
	<select id="getCountByCondition" resultType="int">
		select count(1) from Log
			<include refid="conditionSql"></include>
	</select>
</mapper>