/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.0.M1
 * Generated at: 2018-03-27 04:10:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.log;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("file:/C:/Users/Miao%20%20Long/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1519896787640L));
    _jspx_dependants.put("jar:file:/C:/Users/Miao%20%20Long/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425949870000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\r\n");
      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html lang=\"en-US\">\r\n");
      out.write("<head>\r\n");
      out.write(" \t<base href=\"");
      out.print(basePath );
      out.write("\">\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t<title>log List</title>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/commont.jsp", out, false);
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"condition\" class = \"easyui-panel\" title = \"查询条件\">\r\n");
      out.write("\t<form id = \"logForm\">\r\n");
      out.write("\t\t<table cellspacing=\"0\" cellpadding=\"0\" width=\"98%\" align=\"center\" border=\"0\" class=\"form\">\r\n");
      out.write("        <tbody><tr>\r\n");
      out.write("            <td align=\"right\">操作人员： </td>\r\n");
      out.write("             <td> <input id=\"logUserName\"  name=\"user.userName\" class=\"easyui-textbox\" type=\"text\"  class=\"mytext\" style=\"width:150px;\"></td>\r\n");
      out.write("             <td align=\"right\">模块名称： </td>\r\n");
      out.write("            <td> <input id=\"logModalName\" name=\"moduleName\" class=\"easyui-textbox\" type=\"text\"  class=\"mytext\" style=\"width:150px;\"></td>\r\n");
      out.write("             <td align=\"right\">日志内容：  </td>\r\n");
      out.write("            <td><input id=\"logContext\" name=\"logContext\" class=\"easyui-textbox\" type=\"text\"  class=\"mytext\" style=\"width:150px;\"></td>\r\n");
      out.write("             </tr>\r\n");
      out.write("              <tr>\r\n");
      out.write("             <td align=\"right\">IP地址： </td>\r\n");
      out.write("              <td> <input id=\"logIp\" name=\"ip\" class=\"easyui-textbox\" type=\"text\"  class=\"mytext\" style=\"width:150px;\">  </td>\r\n");
      out.write("              <td align=\"right\">操作日期： </td>\r\n");
      out.write("              \t<td colspan=\"3\">\r\n");
      out.write("              \t   <input  id=\"SlogTime\" name = \"compTime\"  type= \"text\" class= \"easyui-datebox\"  data-options=\"editable:false,width:148\"> </input>\r\n");
      out.write("\t\t\t\t  &nbsp;&nbsp;到&nbsp;&nbsp;<input  id=\"ElogTime\" name = \"ElogTime\"  type= \"text\" class= \"easyui-datebox\"  data-options=\"editable:false,width:148\"> </input>\r\n");
      out.write("\t              <a id=\"btn\" href=\"javascript:void(0)\" onclick = \"setLogCondition()\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-sum'\">查询</a>\r\n");
      out.write("\t\t\t\t  <a id=\"btn\" href=\"javascript:void(0)\" onclick = \"reset()\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-redo'\">撤销</a>\r\n");
      out.write("\t \t\t </td>\r\n");
      out.write("             </tr>\r\n");
      out.write("        </tbody></table>                \r\n");
      out.write("\t   </form>\r\n");
      out.write("</div>\r\n");
      out.write("\t<table id = \"logTable\" title=\"用户列表\">\r\n");
      out.write("\t\t<thead>\r\n");
      out.write("\t\t\t<th data-options = \"field:'abc',width:30,checkbox:true\"></th>\r\n");
      out.write("\t\t\t<th data-options = \"field:'id',width:30,sortable:true,order:'desc',align:'center'\">编号</th>\r\n");
      out.write("\t\t\t<th data-options = \"field:'dateline',width:100,align:'center'\">操作时间</th>\r\n");
      out.write("\t\t\t<th data-options = \"field:'userName',width:40,align:'center'\">操作人</th>\r\n");
      out.write("\t\t\t<th data-options = \"field:'ip',width:50,align:'center'\">IP地址</th>\r\n");
      out.write("\t\t\t<th data-options = \"field:'moduleName',width:40,align:'center'\">模块名称</th>\r\n");
      out.write("\t\t\t<th data-options = \"field:'logContext',width:250\">日志内容</th>\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t   <tbody>\r\n");
      out.write("\t</tbody>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t\r\n");
      out.write("<div id=\"tb\">\r\n");
      out.write("<a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" onclick = \"delete_log()\" data-options=\"iconCls:'icon-remove',plain:true\">删除</a>\r\n");
      out.write("<a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" onclick = \"export_log()\" data-options=\"iconCls:'icon-sum',plain:true\">导出</a>\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t \r\n");
      out.write("\t   \r\n");
      out.write("\t//自定义弹框方法\r\n");
      out.write("\tfunction alert(message){\r\n");
      out.write("\t\t$.messager.show({\r\n");
      out.write("\t\t\ttitle:'提示信息',\r\n");
      out.write("\t\t\tmsg:message,\r\n");
      out.write("\t\t\ttimeout:1000,\r\n");
      out.write("\t\t\tshowType:'slide',\r\n");
      out.write("\t\t\tshowSpeed:200,\r\n");
      out.write("\t\t\tstyle:{\r\n");
      out.write("\t\t\t\tright:'1000',\r\n");
      out.write("\t\t\t\ttop:0,\r\n");
      out.write("\t\t\t\tbottom:''\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//删除方法\r\n");
      out.write("\t\tfunction delete_log(){\r\n");
      out.write("\t\t\tvar ids = $(\"#logTable\").datagrid(\"getSelections\");\r\n");
      out.write("\t\t\tconsole.log(ids.length);\r\n");
      out.write("\t\t\tif (ids.length == 0) {\r\n");
      out.write("\t\t\t\t$.messager.alert(\"提示\",\"请选择要删除的行！\",\"warning\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t$.messager.confirm(\"确定\",\"确定要删除么?\",function (r){\r\n");
      out.write("\t\t\t\t//如果点击的是确认按钮\r\n");
      out.write("\t\t\t\tif (r) {\r\n");
      out.write("\t\t\t\t\tvar idStr = \"ids=\" + ids[0].id;\r\n");
      out.write("\t\t\t\t\tfor (var i = 1; i < ids.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tidStr += \"&ids=\" + ids[i].id;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t$.post(\"log/batchDelete\",idStr,function (data){\r\n");
      out.write("\t\t\t\t\t\tif (data.result == true) {\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#logTable\").datagrid(\"reload\");\r\n");
      out.write("\t\t\t\t\t\t\talert(\"删除成功!\");\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}); \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//撤销条件点击事件\r\n");
      out.write("\t\tfunction reset(){\r\n");
      out.write("\t\t\t$(\"#logForm\").form(\"clear\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//设置查询条件\r\n");
      out.write("\t\tfunction setLogCondition(){ \r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\tvar data = {\r\n");
      out.write("\t\t\tuserName:$(\"#logUserName\").val(),\r\n");
      out.write("\t\t\tmoduleName:$(\"#logModalName\").val(),\r\n");
      out.write("\t\t\tlogContext:$(\"#logContext\").val(),\r\n");
      out.write("\t\t\tip:$(\"#logIp\").val(),\r\n");
      out.write("\t\t\tSlogTime:$(\"#SlogTime\").val(),\r\n");
      out.write("\t\t\tElogTime:$(\"#ElogTime\").val() \r\n");
      out.write("\t\t}; \r\n");
      out.write("\t\t\t$(\"#logTable\").datagrid(\"reload\",data); \r\n");
      out.write("\t    }\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(function (){  \r\n");
      out.write("\t\t\t //datagrid 组件\r\n");
      out.write("\t\t\t$(\"#logTable\").datagrid({\r\n");
      out.write("\t\t\t\turl:\"log/list\",\r\n");
      out.write("\t\t\t\trownumbers:true,\r\n");
      out.write("\t\t\t\tstriped:true,\r\n");
      out.write("\t\t\t\tfitColumns:true,\r\n");
      out.write("\t\t\t\ticonCls:\"icon-search\",\r\n");
      out.write("\t\t\t\tpagination:true,\r\n");
      out.write("\t\t\t\ttoolbar:\"#tb\",\r\n");
      out.write("\t\t\t\tidField:\"id\" \r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t}) \r\n");
      out.write("\t\t\r\n");
      out.write("\t\t \r\n");
      out.write("\t</script>\t  \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
