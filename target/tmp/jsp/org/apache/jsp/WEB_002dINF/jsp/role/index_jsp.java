/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.4.0.M1
 * Generated at: 2018-03-28 15:07:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.role;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("file:/C:/Users/Miao%20%20Long/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1519896787640L));
    _jspx_dependants.put("jar:file:/C:/Users/Miao%20%20Long/.m2/repository/org/apache/taglibs/taglibs-standard-impl/1.2.5/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425949870000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

String path = request.getContextPath();
String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+path+"/";

      out.write("\r\n");
      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<html lang=\"en-US\">\r\n");
      out.write("<head>\r\n");
      out.write(" \t<base href=\"");
      out.print(basePath );
      out.write("\">\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("\t<title>Role List</title>\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/commont.jsp", out, false);
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"roleCondition\" class = \"easyui-panel\" title = \"查询条件\">\r\n");
      out.write("\t<form id = \"roleForm1\">\r\n");
      out.write("\t\t角色名称 : <input type=\"text\" id = \"name\"/> \r\n");
      out.write("\t    <a id=\"btn\" href=\"javascript:void(0)\" onclick = \"setRoleCondition()\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-search'\">查询</a>\r\n");
      out.write("\t\t<a id=\"btn\" href=\"javascript:void(0)\" onclick = \"reset()\" class=\"easyui-linkbutton\" data-options=\"iconCls:'icon-redo'\">撤销</a>\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>\r\n");
      out.write("\t <table id = \"roleTable\" >\r\n");
      out.write("\t \t  <thead> \r\n");
      out.write("\t \t  \t<th data-options = \"field:'id',width:30\">编号</th>\r\n");
      out.write("\t \t  \t<th data-options = \"field:'name',width:60\">角色名称</th>\r\n");
      out.write("\t \t  \t<th data-options = \"field:'available',width:30,formatter:isable\">是否可用</th> \r\n");
      out.write("\t \t  \t<th data-options = \"field:'sas',width:30,formatter:operFormatter\">操作</th>\r\n");
      out.write("\t \t  </thead>\r\n");
      out.write("\t </table>\r\n");
      out.write("\t\r\n");
      out.write("<div id=\"tb_role\">\r\n");
      out.write("<a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" onclick = \"add_role()\" data-options=\"iconCls:'icon-add',plain:true\">添加角色</a>\r\n");
      out.write("<a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" onclick = \"edit_role()\" data-options=\"iconCls:'icon-edit',plain:true\">修改</a>\r\n");
      out.write("<a href=\"javascript:void(0)\" class=\"easyui-linkbutton\" onclick = \"delete_role()\" data-options=\"iconCls:'icon-remove',plain:true\">删除</a>\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("\t//分配权限列\r\n");
      out.write("\t//自定义列\r\n");
      out.write("\tfunction operFormatter(value,row,index){\r\n");
      out.write("\t\treturn \"<a class = 'opBtn' title = '分配权限' onclick = 'allotPer(\"+row.id+\")' href = 'javascript:void(0)'><img src = 'easyui/themes/icons/large_smartart.png' width='16'></img></a>\";\r\n");
      out.write("\t}\r\n");
      out.write("\t//分配权限按钮点击事件\r\n");
      out.write("\tfunction allotPer(rid){ \r\n");
      out.write("\t\t$(\"#roleTable\").datagrid(\"clearSelections\"); \r\n");
      out.write("\t\tvar d  = $(\"<div></div>\").appendTo(\"body\");\r\n");
      out.write("\t\td.dialog({\r\n");
      out.write("\t\t\ttitle:'分配权限',\r\n");
      out.write("\t\t\thref:'permission/allotPer?rid=' + rid ,\r\n");
      out.write("\t\t\twidth:500,\r\n");
      out.write("\t\t\theight:'400',\r\n");
      out.write("\t\t\tmodal:true,\r\n");
      out.write("\t\t\tonClose:function (){$(this).dialog(\"destroy\")},\r\n");
      out.write("\t\t\tbuttons:[{\r\n");
      out.write("\t\t\t\ticonCls:\"icon-ok\",\r\n");
      out.write("\t\t\t\ttext:\"确定\",\r\n");
      out.write("\t\t\t\thandler:function(){   \r\n");
      out.write("\t\t\t\t\t var nodes = $(\"#allotTree\").tree(\"getChecked\",\"checked\");\r\n");
      out.write("\t\t\t\t\t var half_nodes = $(\"#allotTree\").tree(\"getChecked\",\"indeterminate\");\r\n");
      out.write("\t\t\t\t\t  \r\n");
      out.write("\t\t\t\t\t $.merge(nodes,half_nodes);\r\n");
      out.write("\t\t\t\t\t if (nodes.length == 0) {\r\n");
      out.write("\t\t\t\t\t\t alert(\"请选择权限！\");\r\n");
      out.write("\t\t\t\t\t\treturn;\r\n");
      out.write("\t\t\t\t\t  }\r\n");
      out.write("\t\t\t\t\t console.log(nodes);\r\n");
      out.write("\t\t\t\t\t var postDate = \"\";\r\n");
      out.write("\t\t\t\t\t for (var i = 0; i < nodes.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tpostDate += \"ids=\"+nodes[i].id + \"&\"; \r\n");
      out.write("\t\t\t\t\t }\r\n");
      out.write("\t\t\t\t\t postDate += \"roleId=\" + rid;\r\n");
      out.write("\t\t\t\t\t $.post(\"permission/allotPer\",postDate,function (data){\r\n");
      out.write("\t\t\t\t\t\t\tif (data.result) {\r\n");
      out.write("\t\t\t\t\t\t\t\t$.messager.show({\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttitle:'提示',\r\n");
      out.write("\t\t\t\t\t\t\t\t\tmsg:'分配成功!', \r\n");
      out.write("\t\t\t\t\t\t\t\t\ttimeout:'2000'\r\n");
      out.write("\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\td.dialog(\"close\");\r\n");
      out.write("\t\t\t\t\t\t})  \r\n");
      out.write("\t\t\t\t\t \r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},{\r\n");
      out.write("\t\t\t\ticonCls:\"icon-cancel\",\r\n");
      out.write("\t\t\t\ttext:\"取消\",\r\n");
      out.write("\t\t\t\thandler:function(){\r\n");
      out.write("\t\t\t\t\td.dialog(\"close\");\r\n");
      out.write("\t\t\t\t\t$(\"#roleTable\").datagrid(\"clearSelections\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}]\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t//是否可用列\r\n");
      out.write("\tfunction isable(value,row,index){\r\n");
      out.write("\t\tif (row.available == 0) {\r\n");
      out.write("\t\t\treturn \"否\";\r\n");
      out.write("\t\t} \r\n");
      out.write("\t\treturn \"是\";\r\n");
      out.write("\t}\r\n");
      out.write("\t//修改角色方法\r\n");
      out.write("\tfunction edit_role(){\r\n");
      out.write("\t\tvar row = $(\"#roleTable\").datagrid(\"getSelected\");\r\n");
      out.write("\t\tif (row == null) {\r\n");
      out.write("\t\t\talert(\"请选择角色!\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//选中最多的只保留最先选中的\r\n");
      out.write("\t\t$(\"#roleTable\").datagrid(\"clearSelections\");\r\n");
      out.write("\t\t$(\"#roleTable\").datagrid(\"selectRecord\",row.id);\r\n");
      out.write("\t\tvar d = $(\"<div></div>\").appendTo(\"body\");\r\n");
      out.write("\t\td.dialog({\r\n");
      out.write("\t\t\ttitle:'修改角色',\r\n");
      out.write("\t\t\twidth:500,\r\n");
      out.write("\t\t\theight:'auto',\r\n");
      out.write("\t\t\tmodal:true,\r\n");
      out.write("\t\t\thref:'role/form',\r\n");
      out.write("\t\t\tonClose:function (){ $(this).dialog(\"destroy\"); },\r\n");
      out.write("\t\t\tonLoad:function (){ \r\n");
      out.write("\t\t\t\t$.post(\"role/getRoleById\",{id:row.id},function (data){\r\n");
      out.write("\t\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\t\t$(\"#roleForm\").form(\"load\",data);\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tbuttons:[{\r\n");
      out.write("\t\t\t\ticonCls:\"icon-ok\",\r\n");
      out.write("\t\t\t\ttext:\"确定\",\r\n");
      out.write("\t\t\t\thandler:function(){\r\n");
      out.write("\t\t\t\t\t$(\"#roleForm\").form(\"submit\",{\r\n");
      out.write("\t\t\t\t\t\turl : \"role/edit\",\r\n");
      out.write("\t\t\t\t\t\tsuccess : function(data){ \r\n");
      out.write("\t\t\t\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\t\t\t\td.dialog(\"close\");\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#roleTable\").datagrid(\"reload\");\r\n");
      out.write("\t\t\t\t\t\t\talert(\"修改成功！\");\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t},{\r\n");
      out.write("\t\t\t\ticonCls:\"icon-cancel\",\r\n");
      out.write("\t\t\t\ttext:\"取消\",\r\n");
      out.write("\t\t\t\thandler:function(){\r\n");
      out.write("\t\t\t\t\td.dialog(\"close\");\r\n");
      out.write("\t\t\t\t\t$(\"#roleTable\").datagrid(\"clearSelections\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}]\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t})\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t \r\n");
      out.write("\t//添加方法\r\n");
      out.write("\tfunction add_role(){\r\n");
      out.write("\t\t var d = $(\"<div></div>\").appendTo(\"body\");\r\n");
      out.write("\t\t d.dialog({\r\n");
      out.write("\t\t\t title:'添加角色',\r\n");
      out.write("\t\t\t width:500,\r\n");
      out.write("\t\t\t height:'auto',\r\n");
      out.write("\t\t\t modal:true,\r\n");
      out.write("\t\t\t href:'role/form',\r\n");
      out.write("\t\t\t onClose:function (){ $(this).dialog(\"destroy\");},\r\n");
      out.write("\t\t\t buttons:[{\r\n");
      out.write("\t\t\t\t iconCls:'icon-ok',\r\n");
      out.write("\t\t\t\t text:'确定',\r\n");
      out.write("\t\t\t\t handler:function (){  \r\n");
      out.write("\t\t\t\t\t   $(\"#roleForm\").form(\"submit\",{\r\n");
      out.write("\t\t\t\t\t\t url:'role/add',\r\n");
      out.write("\t\t\t\t\t\t success:function (data){\r\n");
      out.write("\t\t\t\t\t\t\t alert(\"添加成功！\");\r\n");
      out.write("\t\t\t\t\t\t\t $(\"#roleTable\").datagrid(\"reload\");\r\n");
      out.write("\t\t\t\t\t\t\t d.dialog(\"close\");\r\n");
      out.write("\t\t\t\t\t\t }\r\n");
      out.write("\t\t\t\t\t })  \r\n");
      out.write("\t\t\t\t }\r\n");
      out.write("\t\t\t },{\r\n");
      out.write("\t\t\t\t iconCls:'icon-cancel',\r\n");
      out.write("\t\t\t\t text:'取消',\r\n");
      out.write("\t\t\t\t handler:function (data){\r\n");
      out.write("\t\t\t\t\t d.dialog(\"close\");\r\n");
      out.write("\t\t\t\t }\r\n");
      out.write("\t\t\t\t \r\n");
      out.write("\t\t\t }]\r\n");
      out.write("\t\t });\r\n");
      out.write("\t}\r\n");
      out.write("\t \t \r\n");
      out.write("\t//自定义弹框方法\r\n");
      out.write("\tfunction alert(message){\r\n");
      out.write("\t\t$.messager.show({\r\n");
      out.write("\t\t\ttitle:'提示信息',\r\n");
      out.write("\t\t\tmsg:message,\r\n");
      out.write("\t\t\ttimeout:1000,\r\n");
      out.write("\t\t\tshowType:'slide',\r\n");
      out.write("\t\t\tshowSpeed:200,\r\n");
      out.write("\t\t\tstyle:{\r\n");
      out.write("\t\t\t\tright:'1000',\r\n");
      out.write("\t\t\t\ttop:0,\r\n");
      out.write("\t\t\t\tbottom:''\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//删除方法\r\n");
      out.write("\t\tfunction delete_role(){\r\n");
      out.write("\t\t\tvar ids = $(\"#roleTable\").datagrid(\"getSelections\");\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t\tif (ids.length == 0) {\r\n");
      out.write("\t\t\t\t$.messager.alert(\"提示\",\"请选择要删除的行！\",\"warning\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t$.messager.confirm(\"确定\",\"确定要删除么?\",function (r){\r\n");
      out.write("\t\t\t\t//如果点击的是确认按钮\r\n");
      out.write("\t\t\t\tif (r) {\r\n");
      out.write("\t\t\t\t\tvar idStr = \"ids=\" + ids[0].id;\r\n");
      out.write("\t\t\t\t\tfor (var i = 1; i < ids.length; i++) {\r\n");
      out.write("\t\t\t\t\t\tidStr += \"&ids=\" + ids[i].id;\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t$.post(\"role/batchDelete\",idStr,function (data){\r\n");
      out.write("\t\t\t\t\t\tif (data.result == true) {\r\n");
      out.write("\t\t\t\t\t\t\t$(\"#roleTable\").datagrid(\"reload\");\r\n");
      out.write("\t\t\t\t\t\t\talert(\"删除成功!\");\r\n");
      out.write("\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}); \r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//撤销条件点击事件\r\n");
      out.write("\t\tfunction reset(){\r\n");
      out.write("\t\t\t$(\"#roleForm1\").form(\"clear\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t//设置查询条件\r\n");
      out.write("\t\tfunction setRoleCondition(){ \r\n");
      out.write("\t\t\tvar data = {name:$(\"#name\").val()};  \r\n");
      out.write("\t\t\t$(\"#roleTable\").datagrid(\"reload\",data); \r\n");
      out.write("\t    }\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t \r\n");
      out.write("\t\t//给角色分配权限\r\n");
      out.write("\t\tfunction allotPermission(rid){\r\n");
      out.write("\t\t\tconsole.log(rid);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(function (){  \r\n");
      out.write("\t\t\t //datagrid 组件\r\n");
      out.write("\t\t\t$(\"#roleTable\").datagrid({\r\n");
      out.write("\t\t\t\turl:\"role/list\",\r\n");
      out.write("\t\t\t\trownumbers:true,\r\n");
      out.write("\t\t\t\tstriped:true,\r\n");
      out.write("\t\t\t\tfitColumns:true,\r\n");
      out.write("\t\t\t\ticonCls:\"icon-search\",\r\n");
      out.write("\t\t\t\tpagination:true,\r\n");
      out.write("\t\t\t\ttoolbar:\"#tb_role\",\r\n");
      out.write("\t\t\t\tidField:\"id\" ,\r\n");
      out.write("\t\t\t\tonLoadSuccess:function (){\r\n");
      out.write("\t\t\t\t\t$(\"a.opBtn\").tooltip({\r\n");
      out.write("\t\t\t\t\t\tposition:'right'\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t})\r\n");
      out.write("</script>\t  \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
